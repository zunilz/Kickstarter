
Software Architecture & Design of Modern Large Scale Systems

System requirements and Architectural Drivers
---------------------------------------------
Types of Requirements (Architectural Drivers)
  -Features of the system
    -Func req
  -Qulity Attributes
    -Non Func req
  -System Constraints
    -Limitations and boundaries

Methods of gathering requirements
  -most powerful methos
    -Use cases - situation/scenario in which our system is used
    -User flows - step by step graphical respresentation of each use case 

Requrement gathering steps
  1. Identify all the actors/users in our system
  2. Capture and describe all possible usecases / scenarios
  3. User flow - Expand each use case through flow of events

Unified Modelling Language
  -Sequence Diagram
    -interaction between actors and objects
    -Time flows from top to bottom

System Qulity Attributes
  -NFRs

System Constraints
  -Technical C
    -sticking to set of fraeworks, tech
    -supporting older browser, systems, mobiles, OS
  -Business C
    -Limited budget
    -Strict deadline
    -Security on platform
    -usage of third party
  -Leagal C
    -Global or regional rules and Regulations
    -HIPPA
    -GDPR


Most important Quality attributes in large scale systems
---------------------------------------------

Performance
Scalability
Availability

Performance
  Performance metrics
  -Response Time
    - Processing time + Waiting time (including network time)
     -Measure and compare using Percentile distribution
    -30ms at 99th percentile of response time
  -Throughput
    -Amount of work/data processed by our system per unit of time.

Scalability
  The measure of a systems ability to handle a growing amountof work, in an easy and cost
effective way by adding additional resources to the system.

  -1. Scale Up
  -2. Scale out
  -3. Team/Org scalability

  Availability
    























































