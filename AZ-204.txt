Implement Azure App Service web apps
----------------------------------------
Explore Azure App Service
..........................

App Service plan
  -An App Service plan defines a set of compute resources for a web app to run. One or more apps can be configured to run on the same computing resources (or in the same App Service plan).

Deployment slots in azure app service
  -Swapping is another advantageous feature about deployment slots. Instead of deploying again new release of application into production environment, we can simply swap staging slot (newly added deployment slot) with our production within same app service. The magic of deployment slots: we can do swapping with zero downtime which means, end users will notice nothing and experience no downtime.
  -Whenever possible, use deployment slots when deploying a new production build. When using a Standard App Service Plan tier or better, you can deploy your app to a staging environment and then swap your staging and production slots. The swap operation warms up the necessary worker instances to match your production scale, thus eliminating downtime.

Identity providers
  -App Service uses federated identity, in which a third-party identity provider manages the user identities and authentication flow for you. The following identity providers are available by default:
  Microsoft Identity Platform, Facebook, Google, Any OpenID Connect provider...

authentication and authorization in App Service
  -The authentication and authorization module runs in the same sandbox as your application code. When it's enabled, every incoming HTTP request passes through it before being handled by your application code. This module handles several things for your app:
    
    -Authenticates users and clients with the specified identity provider(s)
    -Validates, stores, and refreshes OAuth tokens issued by the configured identity provider(s)
    -Manages the authenticated session
    -Injects identity information into HTTP request headers
    The module runs separately from your application code and can be configured using Azure Resource Manager settings or using a configuration file.

Authentication flow
  -Without provider SDK
  -With provider SDK

Authorization behavior
  -Allow unauthenticated requests
  -Require authentication
Token store
  -App Service provides a built-in token store, which is a repository of tokens that are associated with the users of your web apps, APIs, or native mobile apps. When you enable authentication with any provider, this token store is immediately available to your app.

static HTML web app by using Azure Cloud Shell
  resourceGroup=$(az group list --query "[].{id:name}" -o tsv)
  appName=az204app$RANDOM
  cd html-docs-hello-world
  az webapp up -g $resourceGroup -n $appName --html

Configure web app settings
..........................
Enable diagnostic logging
  Enable application logging
  Enable web server logging
    -To enable logging for Windows apps in the Azure portal, navigate to your app and select App Service logs
  Stream logs
    -Azure portal - To stream logs in the Azure portal, navigate to your app and select Log stream.
    -Azure CLI - To stream logs live in Cloud Shell, use the following command
    -Local console - To stream logs in the local console, install Azure CLI and sign in to your account. Once signed in, follow the instructions shown for Azure CLI.
  Access log files
    -If you configure the Azure Storage blobs option for a log type, you need a client tool that works with Azure Storage.
    -For logs stored in the App Service file system, the easiest way is to download the ZIP file in the browser at:
      -Linux/container apps: https://<app-name>.scm.azurewebsites.net/api/logs/docker/zip
      -Windows apps: https://<app-name>.scm.azurewebsites.net/api/dump

Configure security certificates

-A certificate uploaded into an app is stored in a deployment unit that is bound to the app service plan's resource group and region combination (internally called a webspace). This makes the certificate accessible to other apps in the same resource group and region combination.

options to add certificates in App Service
  Create a free App Service managed certificate
  Purchase an App Service certificate	
  Import a certificate from Key Vault	
  Upload a private certificate	
  Upload a public certificate	

Private certificate requirements
Creating a free managed certificate
  -The free App Service managed certificate is a turn-key solution for securing your custom DNS name in App Service. It's a TLS/SSL server certificate that's fully managed by App Service and renewed continuously and automatically in six-month increments, 45 days before expiration. You create the certificate and bind it to a custom domain, and let App Service do the rest.
Import an App Service Certificate
  -If you purchase an App Service Certificate from Azure, Azure manages the following tasks:
    Takes care of the purchase process from certificate provider.
    Performs domain verification of the certificate.
    Maintains the certificate in Azure Key Vault.
    Manages certificate renewal.
    Synchronize the certificate automatically with the imported copies in App Service apps.




